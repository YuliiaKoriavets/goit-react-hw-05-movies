{"version":3,"file":"static/js/650.4e7c4708.chunk.js","mappings":"8OAGaA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,mN,SCAN,SAASE,EAAT,GAAqC,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,SACrC,OAAO,SAACL,EAAD,CAAUI,GAAIA,EAAd,SAAmBC,GAC3B,C,8BCFYC,EAAUL,EAAAA,GAAAA,IAAH,sIAQPM,EAAcN,EAAAA,GAAAA,IAAH,sGAMXO,EAAcP,EAAAA,GAAAA,IAAH,6CAIXQ,GAAcR,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sHCdT,SAASS,IAAgB,IAAD,MAC7BC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAW,UAAGF,EAASG,aAAZ,aAAG,EAAgBC,KAYpC,IAVAC,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAaC,OAAOZ,IAAUa,MAAK,SAAAC,GACjCV,EAASU,EAASC,KACnB,GAGF,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAAChB,KAECG,EACH,OAAO,KAGT,IAAMgB,EAAY,oBAAGd,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAG3CW,EAMEjB,EANFiB,eACAC,EAKElB,EALFkB,aACAC,EAIEnB,EAJFmB,aACAC,EAGEpB,EAHFoB,SACAC,EAEErB,EAFFqB,OACAC,EACEtB,EADFsB,YASIC,EAAcL,EAAaM,MAAM,EAAG,GACpCC,EAAYC,KAAKC,MAAqB,GAAfR,GACvBS,EAAM,yCAAqCN,GAEjD,OACE,gCACE,SAACjC,EAAD,CAAUC,GAAI0B,EAAd,qBACChB,IACC,4BACE,UAACR,EAAD,YACA,0BACE,gBAAKqC,IAAKP,EAAcM,EAASE,EAAOC,IAAKd,EAAgBe,MAAM,aAGrE,UAACtC,EAAD,YACE,0BACGuB,EADH,KACqBM,EADrB,QAGA,wCAAgBE,EAAhB,QACA,sCACA,uBAAIL,KACJ,oCACA,uBA5Bc,SAAAC,GACtB,IAAMY,EAAY,GAElB,OADAZ,EAAOa,KAAI,SAAAC,GAAK,OAAIF,EAAUG,KAAKD,EAAME,KAAzB,IACTJ,EAAUK,KAAK,IACvB,CAwBaC,CAAgBlB,YAItB,UAAC5B,EAAD,YACE,mDACA,2BACE,yBACE,SAACE,EAAD,CAAwBL,GAAG,OAAOe,MAAO,CAACC,KAAMF,GAAhD,iBAAiB,WAEnB,yBACE,SAACT,EAAD,CAA2BL,GAAG,UAAUe,MAAO,CAACC,KAAMF,GAAtD,oBAAiB,iBAGrB,SAAC,KAAD,YAMX,C","sources":["styled/BackLink.styled.jsx","components/BackLink.jsx","styled/MovieDetails.styled.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const LinkBack = styled(Link)`\ndisplay: inline-block;\n  padding: 8px 16px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  border-radius: 1px;\n  background-color: #d4d6d9;\n  margin-bottom: 25px;\n`;\n","import { LinkBack } from '../styled/BackLink.styled';\nimport PropTypes from 'prop-types';\n\nexport default function BackLink({ to, children }) {\n  return <LinkBack to={to}>{children}</LinkBack>;\n}\n\nBackLink.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 30px;\n  padding: 8px 0;\n  margin-bottom: 16px;\n  border-bottom: 1px solid black;\n`;\n\nexport const WrapperLink = styled.div`\n  padding: 8px 0;\n  margin-bottom: 16px;\n  border-bottom: 1px solid black;\n`;\n\nexport const WrapperText = styled.div`\n  max-width: 600px;\n`;\n\nexport const LinkDetails = styled(Link)`\n  display: inline-block;\n  margin-bottom: 10px;\n\n  &.active {\n    color: orangered;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useParams, Outlet } from 'react-router-dom';\nimport BackLink from 'components/BackLink';\nimport { getMovieById } from 'services/api';\nimport image from '../utilities/img/image.png'\nimport { Wrapper, WrapperLink, WrapperText, LinkDetails } from '../styled/MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const subLocation = location.state?.from\n\n  useEffect(() => {\n    try {\n      getMovieById(Number(movieId)).then(response => {\n        setMovie(response.data);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  const {\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n    poster_path,\n  } = movie;\n\n  const getGenresString = genres => {\n    const genresArr = [];\n    genres.map(genre => genresArr.push(genre.name));\n    return genresArr.join(' ');\n  };\n\n  const releaseYear = release_date.slice(0, 4);\n  const userScore = Math.round(vote_average * 10);\n  const poster = `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n  return (\n    <section>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      {movie && (\n        <div>\n          <Wrapper>\n          <div>\n            <img src={poster_path ? poster : image} alt={original_title} width=\"300px\" />\n          </div>\n\n          <WrapperText>\n            <h2>\n              {original_title} ({releaseYear})\n            </h2>\n            <p>User score: {userScore}%</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h4>Genres</h4>\n            <p>{getGenresString(genres)}</p>\n            </WrapperText>\n          </Wrapper>\n\n          <WrapperLink>\n            <p>Additional information</p>\n            <ul>\n              <li>\n                <LinkDetails key=\"cast\" to=\"cast\" state={{from: subLocation}}>Cast</LinkDetails>\n              </li>\n              <li>\n                <LinkDetails key=\"reviews\" to=\"reviews\" state={{from: subLocation}}>Reviews</LinkDetails>\n              </li>\n            </ul>\n            <Outlet />\n          </WrapperLink>\n        </div>\n      )}\n    </section>\n  );\n}\n"],"names":["LinkBack","styled","Link","BackLink","to","children","Wrapper","WrapperLink","WrapperText","LinkDetails","MovieDetails","movieId","useParams","useState","movie","setMovie","location","useLocation","subLocation","state","from","useEffect","getMovieById","Number","then","response","data","error","console","log","backLinkHref","original_title","release_date","vote_average","overview","genres","poster_path","releaseYear","slice","userScore","Math","round","poster","src","image","alt","width","genresArr","map","genre","push","name","join","getGenresString"],"sourceRoot":""}